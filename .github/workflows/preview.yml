name: Portal Bridge [Preview]

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  docs:
    name: "Build Portal Bridge Documentation"
    runs-on: "ubuntu-latest"
    concurrency:
      group: ${{ github.ref }}-portal-docs-preview
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node environment
        uses: actions/setup-node@v3
        with:
          node-version: v16.19.1
      - name: Install dependencies
        run: |
          pushd apps/docs
          npm ci
      - name: Set Version
        id: set-version
        run: |
          echo "_BRANCH_NAME_SHA=$(echo ${{ github.event.pull_request.head.ref }} | sha256sum | cut -c -10)" >> "${GITHUB_OUTPUT}"
      - name: Build
        env:
          PUBLIC_URL: "/${{ steps.set-version.outputs._BRANCH_NAME_SHA }}/docs"
        run: |
          pushd apps/docs
          npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs-preview-build
          path: apps/docs/build
  portal:
    name: "Build Portal Bridge"
    runs-on: "ubuntu-latest"
    concurrency:
      group: ${{ github.ref }}-portal-preview
      cancel-in-progress: true
    environment: Cloudflare-Preview
    steps:
      - name: Set up Node environment
        uses: actions/setup-node@v3
        with:
          node-version: v18.17.1
      - name: Checkout Wormhole Connect
        uses: actions/checkout@v3
        with:
          repository: xlabs/wormhole-connect
          ref: ${{github.event.pull_request.head.ref}}
          path: wormhole-connect
      - name: Checkout Portal Bridge
        uses: actions/checkout@v3
        with:
          path: portal
      - name: Setup Git
        run: |
          cd portal
          git config user.name "xLabs CI"
          git config user.email "devops@xlabs.xyz"
      - name: Set Portal Bridge Version
        id: set-version
        run: |
          cd portal
          npm version $(node -p -e "require('./package.json').version")-P$(echo ${{ github.sha }} | cut -c -10)
          echo "_PKG_VERSION=$(node -p -e "require('./package.json').version")" >> "${GITHUB_OUTPUT}"
          echo "_BRANCH_NAME_SHA=$(echo ${{ github.event.pull_request.head.ref }} | sha256sum | cut -c -10)" >> "${GITHUB_OUTPUT}"
      - name: Build Portal Bridge
        env:
          PUBLIC_URL: "/${{ steps.set-version.outputs._BRANCH_NAME_SHA }}"
          VITE_APP_VERSION: ${{ github.event.pull_request.head.ref }}
          VITE_APP_CLUSTER: "mainnet"
        run: |
          npm install -g husky
          pushd wormhole-connect
          npm ci --workspaces --if-present
          npm run build
          npm link --workspaces --if-present 
          popd
          pushd portal/apps/connect
          npm ci
          npm link @wormhole-foundation/wormhole-connect
          pushd public
          npm run set-version
          popd
          echo 'VITE_APP_VERSION=$npm_package_version' > .env
          npm run build
      - name: Upload Portal Bridge Artifact
        uses: actions/upload-artifact@v3
        with:
          name: preview-build
          path: apps/connect/dist
      - name: Deploy metadata
        run: |
          mkdir deploy-metadata
          pushd deploy-metadata
          echo ${{ steps.set-version.outputs._BRANCH_NAME_SHA }} > .branch-sha
          echo ${{ steps.set-version.outputs._PKG_VERSION }} > .version
      - name: Upload Deploy metadata
        uses: actions/upload-artifact@v3
        with:
          name: preview-deploy-metadata
          path: deploy-metadata

  publish:
    name: "Publish"
    needs:
      - portal
      - docs
    runs-on: "ubuntu-latest"
    concurrency:
      group: ${{ github.ref }}-publish-preview
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: preview-build
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: docs-preview-build
          path: docs
      - name: Set up GitHub NPM registry
        uses: actions/setup-node@v3
        with:
          node-version: v16.19.1
          registry-url: https://npm.pkg.github.com
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish

  deploy:
    name: "Deploy Preview"
    needs: publish
    runs-on: "ubuntu-latest"
    concurrency:
      group: ${{ github.ref }}-deploy-preview
      cancel-in-progress: true
    permissions:
      contents: write
    environment: Cloudflare-Preview
    steps:
      - name: Checkout preview branch
        uses: actions/checkout@v3
        with:
          ref: preview
      - name: Setup Git
        run: |
          git config user.name "xLabs CI"
          git config user.email "devops@xlabs.xyz"
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: preview-deploy-metadata
          path: deploy-metadata
      - name: Set deploy metadata
        id: set-version
        run: |
          echo "_PKG_VERSION=$(cat deploy-metadata/.version)" >> ${GITHUB_OUTPUT}
          echo "_BRANCH_NAME_SHA=$(cat deploy-metadata/.branch-sha)" >> ${GITHUB_OUTPUT}
      - name: Trigger a preview Deploy
        run: |
          sleep 30s
          mkdir -p preview/${{ steps.set-version.outputs._BRANCH_NAME_SHA }}
          pushd preview/${{ steps.set-version.outputs._BRANCH_NAME_SHA }}
          [[ ! -f .latest ]] && touch .latest
          [[ ! -f .artifacts ]] && touch .artifacts
          cat .latest >> .artifacts
          echo ${{ steps.set-version.outputs._PKG_VERSION }} > .latest
          git add .artifacts .latest
          git commit -m"Update preview artifacts ${{ steps.set-version.outputs._PKG_VERSION }}"
          git push
          echo "The preview URL is: ${{ vars.PREVIEW_ROOT_URL }}/${{ steps.set-version.outputs._BRANCH_NAME_SHA }}/" >> ${GITHUB_STEP_SUMMARY}
